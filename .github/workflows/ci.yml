name: CI & Push to ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ACR_NAME: reflectacr
      ACR_LOGIN_SERVER: reflectacr.azurecr.io

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Run Backend Pytest
        run: |
          pip install -r backend/requirements.txt
          cd backend
          pytest ../tests/

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Scan Backend Dockerfile (config scan)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ./backend
          format: table
          exit-code: 1

      - name: Build Backend Image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $ACR_LOGIN_SERVER/avyay-backend:latest \
            ./backend --load

      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Scan Backend Image (fail on CRITICAL only)
        run: |
          trivy image \
            --severity CRITICAL \
            --exit-code 1 \
            --ignore-unfixed \
            --format table \
            ${{ env.ACR_LOGIN_SERVER }}/avyay-backend:latest
            

      - name: Push Backend Image
        run: docker push $ACR_LOGIN_SERVER/avyay-backend:latest

      - name: Scan Frontend Dockerfile (config scan)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ./frontend
          format: table
          exit-code: 0

      - name: Build Frontend Image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $ACR_LOGIN_SERVER/avyay-frontend:latest \
            ./frontend --load

      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Scan Frontend Image (fail on CRITICAL only)
        run: |
          trivy image \
            --severity CRITICAL \
            --exit-code 1 \
            --ignore-unfixed \
            --format table \
            ${{ env.ACR_LOGIN_SERVER }}/avyay-frontend:latest


      - name: Push Frontend Image
        run: docker push $ACR_LOGIN_SERVER/avyay-frontend:latest
